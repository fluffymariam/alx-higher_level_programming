# 4-print_square.txt

===============================
How to Use 4-print_square.py
===============================

This module defines a function ``print_square(size)`` which prints a square
using the character #.

Usage
=====

``print_square(...)`` prints a square of size ``size`` with the character #.

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(4)
    ####
    ####
    ####
    ####

::

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

::

    >>> print_square(0)
    <BLANKLINE>

::

    >>> print_square(1)
    #
    <BLANKLINE>

Invalid Input
=============

The parameter ``size`` must be an integer. If ``size`` is not an integer, a
TypeError is raised.

::

    >>> print_square("hello")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(3.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

Size Constraints
================

``size`` must be a non-negative integer. If ``size`` is less than 0, a
ValueError is raised.

::

    >>> print_square(-1)
    Traceback (most recent call last):
    ValueError: size must be >= 0

"""

# Uncomment the below lines for local testing
# import doctest
# doctest.testmod(verbose=True)
